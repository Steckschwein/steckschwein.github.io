<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rom on Steckschwein</title><link>https://www.steckschwein.de/tags/rom/</link><description>Recent content in Rom on Steckschwein</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 04 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://www.steckschwein.de/tags/rom/index.xml" rel="self" type="application/rss+xml"/><item><title>Flash - Master of the Universe</title><link>https://www.steckschwein.de/post/2025/02/flash/</link><pubDate>Tue, 04 Feb 2025 00:00:00 +0000</pubDate><guid>https://www.steckschwein.de/post/2025/02/flash/</guid><description>The 28C256 EEPROM, which holds the BIOS, has been our go-to choice since the early breadboard days. Before that, we relied on EPROMs, which required UV erasure before every upgrade—a time-consuming and inconvenient process. Switching to an EEPROM significantly improved our workflow, reducing turnaround time.
However, the 28C256 has a couple of drawbacks:
It cannot be written in-circuit since it requires a 12V programming voltage, which the Steckschwein does not provide.</description></item><item><title>Dekoder, die Dritte</title><link>https://www.steckschwein.de/post/dekoder-die-dritte/</link><pubDate>Thu, 23 Oct 2014 00:00:00 +0000</pubDate><guid>https://www.steckschwein.de/post/dekoder-die-dritte/</guid><description>Bekanntlich dekodiert unser GAL die oberen 8bit des Adressbus, um den Bereich $8000-$ffff unter RAM, IO-Bereich und ROM einzuteilen. Die unteren 32k werden am Decoder vorbei direkt von der Adressleitung A15 selektiert. Das Memory-Mapping, das sich daraus ergibt, ist - zur Wiederholung - wie folgt:
Bereich Was $0000 - $7fff RAM $8000 - $cfff RAM $d000 - $dfff IO-Bereich $e000 - $ffff ROM Die letzte Änderung am Decoder war, das ROM bei Bedarf ausblendbar zu machen.</description></item></channel></rss>