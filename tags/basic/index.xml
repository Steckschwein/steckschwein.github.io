<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Basic on Steckschwein</title><link>https://www.steckschwein.de/tags/basic/</link><description>Recent content in Basic on Steckschwein</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 10 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.steckschwein.de/tags/basic/index.xml" rel="self" type="application/rss+xml"/><item><title>Saving ASCII sources in EhBasic</title><link>https://www.steckschwein.de/post/ascii_save_ehbasic/</link><pubDate>Sun, 10 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.steckschwein.de/post/ascii_save_ehbasic/</guid><description>Our FAT32 driver now supports byte-wise writing of a file. Reason enough to continue reworking the file handling of our EhBasic port that we started here to finally having the SAVE command write ASCII source files.
The basic idea is to open a file, redirect the EhBasic output vector to our new kernel call &amp;ldquo;krn_write_byte&amp;rdquo;, then trigger the LIST command internally. The listing being output by LIST will then be written to the opened file instead the screen.</description></item><item><title>LOAD / SAVE in EhBasic</title><link>https://www.steckschwein.de/post/load-save-in-ehbasic/</link><pubDate>Tue, 28 Feb 2017 00:00:00 +0000</pubDate><guid>https://www.steckschwein.de/post/load-save-in-ehbasic/</guid><description>Nachdem EhBasic brauchbar auf unserem SteckOS-Kernel läuft, fehlen noch 2 Kleinigkeiten für das vollkommene Glück. Denn noch lassen sich die geschriebenen BASIC-Kunstwerke nicht speichern. Dies stellt uns gleich vor 2 Herausforderungen:
Unsere FAT32-Implementierung beherrscht noch gar keinen Schreibzugriff. Genauer gesagt ist es noch nicht möglich, freie Cluster zu finden und Verzeichniseinträge zu erzeugen. LOAD und SAVE existieren in EhBasic nur als Vektoren, an die bei Aufruf gesprungen wird. Was dort passieren soll, muss für die jeweilige Hardware selbst implementiert werden.</description></item><item><title>Loading ASCII sources in EhBasic</title><link>https://www.steckschwein.de/post/ascii_ehbasic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.steckschwein.de/post/ascii_ehbasic/</guid><description>Since our implementation of FAT32 now supports reading a file byte for byte, a little rework of the file handling in our version of EhBasic is in order.
In the past, we only could read or write a file as a whole, relative to the location in memory where the according pointer pointed to. We used this in EhBasic to save and load BASIC programs by dumping and reloading it’s binary representation from memory.</description></item></channel></rss>