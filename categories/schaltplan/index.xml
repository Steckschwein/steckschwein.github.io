<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>schaltplan on</title><link>https://beta.steckschwein.de/categories/schaltplan/</link><description>Recent content in schaltplan on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 01 Mar 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://beta.steckschwein.de/categories/schaltplan/index.xml" rel="self" type="application/rss+xml"/><item><title>V9958 - Vom Steckbrett zum Prototypen</title><link>https://beta.steckschwein.de/post/v9958-vom-steckbrett-zum-prototypen/</link><pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate><guid>https://beta.steckschwein.de/post/v9958-vom-steckbrett-zum-prototypen/</guid><description>Es ist soweit, der erste Prototyp auf Platine von unserem neuen V9958-Videoboard ist fertig layoutet, und die Platinen warten beim Fertiger auf ihren Versand.
Der Steckbrettaufbau vom letzten Post wurde auf 128k erweitert. Dazu ist einfach eine 2. Bank von 2 Stück 64k x 4 DRAMS dazugebaut worden. Damit entspricht der Aufbau unserem Schaltplan, und dieser ist damit getestet.
Unsere Timing-Probleme führen wir auf zu kurze Delays bei Registerzugriffen, ein Softwareproblem also, zurück.</description><content>&lt;p>Es ist soweit, der erste Prototyp auf Platine von unserem neuen V9958-Videoboard ist fertig layoutet, und die Platinen warten beim Fertiger auf ihren Versand.&lt;/p>
&lt;p>Der Steckbrettaufbau vom &lt;a href="http://steckschwein.de/2017/12/09/es-wird-wieder-gesteckt/">letzten Post&lt;/a> wurde auf 128k erweitert. Dazu ist einfach eine 2. Bank von 2 Stück 64k x 4 DRAMS dazugebaut worden. Damit entspricht der Aufbau unserem Schaltplan, und dieser ist damit getestet.&lt;/p>
&lt;p>Unsere Timing-Probleme führen wir auf zu kurze Delays bei Registerzugriffen, ein Softwareproblem also, zurück. Das Businterface als solches ist durchaus sauber, und wir haben es genauso gelassen wie beim TMS9929. Einziger Unterschied ist, dass /CSW und /CSR nicht mehr mit einem 7400 erzeugt werden, sondern mit einem 74139. Damit sparen wir uns später einen IC, wenn wir aus dem Videoboard ein kombiniertes Video- und Soundboard machen, indem wir den OPL2-Chip noch dazupacken. Aber wir greifen vor.&lt;/p>
&lt;p>Das neue V9958-Board markiert auch eine Veränderung in unserer Vorgehensweise. Bislang haben wir Neuerungen immer komplett ausdesigned auf dem Steckbrett aufgebaut, und erst ganz am Schluss Platinen fertigen lassen, haben wir hier bewusst erst nur die Basisversion layoutet und direkt als Platinen fertigen lassen. Die günstigen Preise der diversen Platinenfertiger machens möglich, und wir verbringen weniger Zeit mit nervtötenden, wackligen Steckbrettaufbauten, und können uns auch langwierige und fehlerträchtige Aufbauten auf Lochrasterplatine sparen. Als angenehmen Nebeneffekt haben wir zwingend einen Schaltplan für jeden Schritt erstellt und haben somit alles lückenlos dokumentiert. Wir rechnen mit noch mindestens 2 Revisionen des Boards. Nämlich eine Reduktion der DRAM-Bestückung auf einen einzigen 16bit-Baustein, und zum Schluss Hinzufügen des Soundchips, sodass das Steckschwein in Zukunft nur noch aus 3 Platinen besteht. Jedenfalls bis wir uns dann an den Einplatiner wagen.&lt;/p>
&lt;p>&lt;img src="images/img_3308.jpg" alt="IMG_3308"> Der Steckbrettaufbau mit 128k. Für das Bild im Hintergrund werden trotzdem nur 16k verwendet.&lt;/p>
&lt;p>&lt;img src="images/photo_2018-03-01_18-53-11.jpg" alt="photo_2018-03-01_18-53-11"> 3D-Rendering der neuen Platine&lt;/p></content></item><item><title>Genug</title><link>https://beta.steckschwein.de/post/genug/</link><pubDate>Tue, 10 Feb 2015 00:00:00 +0000</pubDate><guid>https://beta.steckschwein.de/post/genug/</guid><description>Es ist ruhig geworden ums Steckschwein. Das liegt daran, dass wir genug haben. Genug von dem Gewackel auf dem Steckbrett, genug von instabilem Monitorbild und anderen diversen Störanfälligkeiten. Wir wollen endlich Code schreiben, und die Bugs dort suchen, und nicht auf dem Steckbrett. Dazu müssen wir unsere Hardware in eine stabilere Form zu bringen. Das bedeutet: Platinen. Zwar noch nicht unser Einplatiner, aber es spricht ja nichts dagegen, die einzelnen Baugruppen auf je eine Platine zu bringen, und diese zu verbinden.</description><content>&lt;p>Es ist ruhig geworden ums Steckschwein. Das liegt daran, dass wir genug haben. Genug von dem Gewackel auf dem Steckbrett, genug von instabilem Monitorbild und anderen diversen Störanfälligkeiten. Wir wollen endlich Code schreiben, und die Bugs dort suchen, und nicht auf dem Steckbrett. Dazu müssen wir unsere Hardware in eine stabilere Form zu bringen. Das bedeutet: Platinen. Zwar noch nicht unser Einplatiner, aber es spricht ja nichts dagegen, die einzelnen Baugruppen auf je eine Platine zu bringen, und diese zu verbinden. So haben wir die Möglichkeit, später einzelne Baugruppen auszutauschen oder neue (Sound!) zu ergänzen. Die Layouts sind gemacht, die Platinen in Produktion, sodass uns aktuell nichts weiter bleibt, als abzuwarten.&lt;/p>
&lt;p>So solls aussehen:&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted --></content></item><item><title>Schaltplan</title><link>https://beta.steckschwein.de/post/schaltplan/</link><pubDate>Sat, 05 Apr 2014 00:00:00 +0000</pubDate><guid>https://beta.steckschwein.de/post/schaltplan/</guid><description>Damit Klarheit darüber herrscht, worum es überhaupt geht, haben wir den Schaltplan in die einzelnen Gruppen (Prozessor+ Freunde, Speicher, UART) zerlegt.
Die aktuelle Stückliste liest sich laut Eagle folgendermaßen:
Part Value Device C1 100n C5/3 C3 1n C-EU025-025X050 C4 10n C-EU025-025X050 C5 10µF CPOL-EUE2,5-6E C6 100n C5/3 C7 100n C5/3 C8 100n C5/3 C12 1µF CPOL-EUE2,5-6E C13 100n C5/3 C14 100n C5/3 C15 100n C5/3 C16 1µF CPOL-EUE2,5-6E C17 1µF CPOL-EUE2,5-6E C18 1µF CPOL-EUE2,5-6E C19 1µF CPOL-EUE2,5-6E IC1 CY62256LL-PC CY62256LL-PC IC3 CY62256LL-PC CY62256LL-PC IC4 NE555 NE555 IC5 28c64 2864 IC6 16550 UART XR-16C550P IC8 74LS06N 74LS06N IC9 GAL22V10 22V10 IC10 MAX232 MAX232 QG1 2MHz XO-14 QG2 1.</description><content>&lt;p>Damit Klarheit darüber herrscht, worum es überhaupt geht, haben wir den Schaltplan in die einzelnen Gruppen (Prozessor+ Freunde, Speicher, UART) zerlegt.&lt;/p>
&lt;p>Die aktuelle Stückliste liest sich laut Eagle folgendermaßen:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Part    &lt;/th>
&lt;th>Value          &lt;/th>
&lt;th>Device&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>C1      &lt;/td>
&lt;td>100n          &lt;/td>
&lt;td>C5/3          &lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>C3      &lt;/td>
&lt;td>1n            &lt;/td>
&lt;td>C-EU025-025X050&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>C4      &lt;/td>
&lt;td>10n            &lt;/td>
&lt;td>C-EU025-025X050&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>C5      &lt;/td>
&lt;td>10µF          &lt;/td>
&lt;td>CPOL-EUE2,5-6E&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>C6      &lt;/td>
&lt;td>100n          &lt;/td>
&lt;td>C5/3          &lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>C7      &lt;/td>
&lt;td>100n          &lt;/td>
&lt;td>C5/3          &lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>C8      &lt;/td>
&lt;td>100n          &lt;/td>
&lt;td>C5/3          &lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>C12      &lt;/td>
&lt;td>1µF            &lt;/td>
&lt;td>CPOL-EUE2,5-6E&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>C13      &lt;/td>
&lt;td>100n          &lt;/td>
&lt;td>C5/3          &lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>C14      &lt;/td>
&lt;td>100n          &lt;/td>
&lt;td>C5/3          &lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>C15      &lt;/td>
&lt;td>100n          &lt;/td>
&lt;td>C5/3           &lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>C16      &lt;/td>
&lt;td>1µF            &lt;/td>
&lt;td>CPOL-EUE2,5-6E&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>C17      &lt;/td>
&lt;td>1µF            &lt;/td>
&lt;td>CPOL-EUE2,5-6E&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>C18      &lt;/td>
&lt;td>1µF            &lt;/td>
&lt;td>CPOL-EUE2,5-6E&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>C19      &lt;/td>
&lt;td>1µF            &lt;/td>
&lt;td>CPOL-EUE2,5-6E&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IC1      &lt;/td>
&lt;td>CY62256LL-PC  &lt;/td>
&lt;td>CY62256LL-PC  &lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IC3      &lt;/td>
&lt;td>CY62256LL-PC  &lt;/td>
&lt;td>CY62256LL-PC  &lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IC4      &lt;/td>
&lt;td>NE555          &lt;/td>
&lt;td>NE555        &lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IC5      &lt;/td>
&lt;td>28c64          &lt;/td>
&lt;td>2864          &lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IC6      &lt;/td>
&lt;td>16550 UART    &lt;/td>
&lt;td>XR-16C550P    &lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IC8      &lt;/td>
&lt;td>74LS06N        &lt;/td>
&lt;td>74LS06N      &lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IC9      &lt;/td>
&lt;td>GAL22V10      &lt;/td>
&lt;td>22V10        &lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IC10    &lt;/td>
&lt;td>MAX232        &lt;/td>
&lt;td>MAX232         &lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>QG1      &lt;/td>
&lt;td>2MHz          &lt;/td>
&lt;td>XO-14&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>QG2      &lt;/td>
&lt;td>1.8432MHz      &lt;/td>
&lt;td>XO-14&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>R2      &lt;/td>
&lt;td>3.3k          &lt;/td>
&lt;td>R-EU_0204/7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>R3      &lt;/td>
&lt;td>1M            &lt;/td>
&lt;td>R-EU_0204/7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>R4      &lt;/td>
&lt;td>1M            &lt;/td>
&lt;td>R-EU_0204/7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>R5      &lt;/td>
&lt;td>3.3k          &lt;/td>
&lt;td>R-EU_0204/7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>R6      &lt;/td>
&lt;td>3.3k          &lt;/td>
&lt;td>R-EU_0204/7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>R7      &lt;/td>
&lt;td>3.3k          &lt;/td>
&lt;td>R-EU_0204/7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>R8      &lt;/td>
&lt;td>3.3k          &lt;/td>
&lt;td>R-EU_0204/7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>R9      &lt;/td>
&lt;td>4.7k          &lt;/td>
&lt;td>R-EU_0204/7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>S1      &lt;/td>
&lt;td>DTE6          &lt;/td>
&lt;td>DTE6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>U1      &lt;/td>
&lt;td>65c02          &lt;/td>
&lt;td>G65SC02P&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>U3      &lt;/td>
&lt;td>65c22          &lt;/td>
&lt;td>G65SC22P&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>V1      &lt;/td>
&lt;td>74138N        &lt;/td>
&lt;td>74138N&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>V2      &lt;/td>
&lt;td>74LS00N        &lt;/td>
&lt;td>74LS00N&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>X2      &lt;/td>
&lt;td>RS232          &lt;/td>
&lt;td>F09HP&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;img src="images/28878-cpu.png" alt="CPU">
Der 65c02-Prozessor nebst Oszillator und RESET-Schaltung, welche aus dem Commodore-PET übernommen wurde und dem GAL, der zu Dekodierung des Adressbereichs von $8000 bis $ffff dient. Nicht zu sehen ist der Pull-Up-Widerstand für die BE (Bus Enable)-Leitung der WDC-Variante des 65x02, ohne den der Prozessor in einen Tri-State-Zustand geht und sich vom Bus abkoppelt.&lt;/p>
&lt;p>&lt;img src="images/e4c5e-romram.png" alt="ROMRAM">
Das EEPROM und die beiden 32k SRAM-Bausteine. Etwas schwer zu erkennen: die Adressleitung A15 des Prozessors dient den &amp;ldquo;unteren&amp;rdquo; 32k (IC1) als CS-Signal. Das CS_HIRAM-Signal hingegen erzeugt der GAL (siehe oben). Der Schaltplan unterschlägt, dass wir in Wirklichkeit ein 28c256-EEPROM verwendet haben, welches wir durch auf Masse legen von A14 und A13 auf 8k &amp;ldquo;kastriert&amp;rdquo; haben.&lt;/p>
&lt;p>&lt;img src="images/e0273-uart.png" alt="UART">
Der UART + Glue Logic, um dessen Bus-Interface an das des 65c02 anzupassen. Die Invertierung von RESET und INT(IRQ) übernimmt ein 74ls06. Beim RESET-Signal ist aufgrund dessen Open Collector-Treibers noch ein Pull-Up-Widerstand nötig.&lt;/p>
&lt;p>&lt;img src="images/b3061-rs232.png" alt="rs232">
Der Vollständigkeit halber.&lt;/p>
&lt;p>&lt;img src="images/9ee9c-via.png" alt="VIA"> Die Anbindung der 65x22 VIA gestaltet sich trivial und erweitert unseren kleinen Rechner um vielseitige IO-Möglichkeiten.&lt;/p></content></item></channel></rss>