<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C on Steckschwein</title><link>https://www.steckschwein.de/tags/c/</link><description>Recent content in C on Steckschwein</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 24 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.steckschwein.de/tags/c/index.xml" rel="self" type="application/rss+xml"/><item><title>Generating QR Codes</title><link>https://www.steckschwein.de/post/2024/04/generating-qrcodes/</link><pubDate>Wed, 24 Apr 2024 00:00:00 +0000</pubDate><guid>https://www.steckschwein.de/post/2024/04/generating-qrcodes/</guid><description>In order to generate our own QR codes natively on the Steckschwein, we drew a lot of inspiration from this article https://8bitworkshop.com/docs/posts/2022/8bit-qr-code.html
It even points to an adapted version of the qrtiny library, that has been made to compile with cc65, including a demo for the Apple ][, using cc65&amp;rsquo;s own Tiny Graphics Interface (TGI). Which is very nice, because all the hard work has already been done.
We have not implemented TGI (yet?</description></item><item><title>Sorting Demo</title><link>https://www.steckschwein.de/post/2024/04/sorting/</link><pubDate>Wed, 17 Apr 2024 00:00:00 +0000</pubDate><guid>https://www.steckschwein.de/post/2024/04/sorting/</guid><description>To share my fascination for the numerous sorting algorithm videos on youtube, I took some sorting algorithm examples in C from https://www.geeksforgeeks.org/sorting and visualized them using our BGI compatible C graphics library (more about that later).
The algorithms shown are:
Bubble Sort Cocktail shaker Sort Gnome Sort Insertion Sort Comb Sort Heap Sort Shell Sort Selection Sort Quick Sort Merge Sort Radix Sort The code examples from https://www.geeksforgeeks.org/sorting are only slightly adapted and could be compiled with cc65 almost instantly.</description></item></channel></rss>